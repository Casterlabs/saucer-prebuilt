on:
  push:
    branches:
      - 'main'
  pull_request:
  release: 
    types: [created]

name: ⛓️ GNU/Linux

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true # Shut up. https://github.blog/changelog/2023-06-13-github-actions-all-actions-will-run-on-node16-instead-of-node12-by-default/

jobs:
  build-gnu_linux-qt5:
    strategy:
      fail-fast: false
      matrix:
        build-type:
          - Release
          # - Debug

    runs-on: ubuntu-latest
    container: archlinux:base-devel
    name: "GNU_Linux-Qt5-x86_64-${{ matrix.build-type }}"

    steps:
      - name: 📥 Checkout actions code
        uses: actions/checkout@v4

      - name: 🛸 Checkout Saucer bindings code
        uses: actions/checkout@v4
        with:
          repository: saucer/bindings
          path: saucer
          ref: main

      - name: 📋 Install dependencies
        shell: bash
        run: pacman --noconfirm -Syu cmake gcc git xorg-server-xvfb xorg-xwd

      - name: 📋 Install Qt5 dependencies
        shell: bash
        run: pacman --noconfirm -Syu qt5-base qt5-webchannel qt5-webengine

      - name: 🔨 Compile
        shell: bash
        run: |
            cd saucer
            cmake -B build -Dsaucer_backend=Qt5
            cmake --build build --config ${{ matrix.build-type }}

      - name: 📦 Upload Artifact
        uses: ./.github/actions/upload-artifact
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "GNU_Linux-Qt5-x86_64-${{ matrix.build-type }}"
          path: "saucer/build/libsaucer-bindings.so"

  build-gnu_linux-qt6:
    strategy:
      fail-fast: false
      matrix:
        build-type:
          - Release
          # - Debug

    runs-on: ubuntu-latest
    container: archlinux:base-devel
    name: "GNU_Linux-Qt6-x86_64-${{ matrix.build-type }}"

    steps:
      - name: 📥 Checkout actions code
        uses: actions/checkout@v4

      - name: 🛸 Checkout Saucer bindings code
        uses: actions/checkout@v4
        with:
          repository: saucer/bindings
          path: saucer
          ref: main

      - name: 📋 Install dependencies
        shell: bash
        run: pacman --noconfirm -Syu cmake gcc git xorg-server-xvfb xorg-xwd

      - name: 📋 Install Qt6 dependencies
        shell: bash
        run: pacman --noconfirm -Syu qt6-base qt6-declarative qt6-svg qt6-tools qt6-translations qt6-webchannel qt6-webengine

      - name: 🔨 Compile
        shell: bash
        run: |
            cd saucer
            cmake -B build -Dsaucer_backend=Qt6
            cmake --build build --config ${{ matrix.build-type }}

      - name: 📦 Upload Artifact
        uses: ./.github/actions/upload-artifact
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "GNU_Linux-Qt6-x86_64-${{ matrix.build-type }}"
          path: "saucer/build/libsaucer-bindings.so"

  build-gnu_linux-webkitgtk:
    strategy:
      fail-fast: false
      matrix:
        build-type:
          - Release
          # - Debug
        platform:
          # Check these for architecture compatibility:
          # https://packages.debian.org/search?searchon=names&keywords=libgtk-4-dev
          # https://hub.docker.com/_/gcc/tags?page=&page_size=&ordering=&name=bookworm
          # https://github.com/tonistiigi/binfmt?tab=readme-ov-file#build-test-image
          - {
              arch: "x86_64",
              qemuArch: "linux/amd64",
              dockerArch: SAME_AS_QEMU,
            }
          - {
              arch: "aarch64",
              qemuArch: "linux/arm64",
              dockerArch: SAME_AS_QEMU,
            }
          - {
              arch: "arm",
              qemuArch: "linux/arm/v5",
              dockerArch: SAME_AS_QEMU,
            }
          - {
              arch: "ppc64le",
              qemuArch: "linux/ppc64le",
              dockerArch: SAME_AS_QEMU,
            }

    runs-on: ubuntu-latest
    name: "GNU_Linux-WebKitGtk-${{ matrix.platform.arch }}-${{ matrix.build-type }}"

    steps:
      - name: 📥 Checkout actions code
        uses: actions/checkout@v4

      - name: 🛸 Checkout Saucer bindings code
        uses: actions/checkout@v4
        with:
          repository: saucer/bindings
          path: saucer
          ref: main

      - name: 👨‍💻 Setup container
        uses: ./.github/actions/setup-container
        with:
          qemuArch: ${{ matrix.platform.qemuArch }}
          dockerArch: ${{ matrix.platform.dockerArch }}
          image: "gcc:14.2.0-bookworm"

      - name: 📋 Install dependencies
        uses: ./.github/actions/run-in-container
        with:
          command: |
            apt update
            apt install -y build-essential git cmake xvfb

      - name: 📋 Install WebKitGtk dependencies
        uses: ./.github/actions/run-in-container
        with:
          command: |
            apt install -y libgtk-4-dev libwebkitgtk-6.0-dev libadwaita-1-0

      - name: 🔨 Compile
        uses: ./.github/actions/run-in-container
        with:
          command: |
            if [ "${{ matrix.platform.arch }}" == "arm" ]; then
              export TARGET_ARCH="armv5+nofp"
            fi

            cd saucer
            cmake -B build -Dsaucer_backend=WebKitGtk
            cmake --build build --config ${{ matrix.build-type }}

      - name: 📦 Upload Artifact
        uses: ./.github/actions/upload-artifact
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "GNU_Linux-WebKitGtk-${{ matrix.platform.arch }}-${{ matrix.build-type }}"
          path: "saucer/build/libsaucer-bindings.so"
